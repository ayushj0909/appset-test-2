name: Validate Helm Charts

on:
  pull_request:
    paths:
      - 'charts/**'
  workflow_dispatch:


jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.1

      - name: Render Helm Chart
        run: helm template workload ./chart/workload -f values/common.yaml -f values/analyst/prod.values.yaml --skip-schema-validation > rendered.yaml

      - name: Validate rendered manifests with kubeconform
        id: validate
        run: docker run --rm -v "$(pwd):/workspace" ghcr.io/yannh/kubeconform:latest -verbose -summary -output text /workspace/rendered.yaml | tee kubeconform_output.txt

      - name: Process and generate summary
        if: always()
        run: |
          echo "## Kubeconform Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Resource            | Status  | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------------|---------|---------|" >> $GITHUB_STEP_SUMMARY
      
          while IFS= read -r line; do
            # We only care about lines matching /workspace/rendered.yaml
            if [[ "$line" =~ ^/workspace/rendered.yaml ]]; then
              # Example line: /workspace/rendered.yaml - ExternalSecret INVALID ...
              resource=$(echo "$line" | awk '{print $4}')   # e.g. ExternalSecret
              status=$(echo "$line" | awk '{print $5}')     # e.g. INVALID
              details=$(echo "$line" | cut -d' ' -f6-)       # everything after the status
              # Convert status to an emoji or just keep it
              case "$status" in
                VALID)   status="✅ VALID" ;;
                INVALID) status="❌ INVALID" ;;
                ERROR)   status="⚠️ ERROR" ;;
              esac
              echo "| $resource | $status | $details |" >> $GITHUB_STEP_SUMMARY
            fi
          done < kubeconform_output.txt
      
          # Finally, append the summary line
          echo "" >> $GITHUB_STEP_SUMMARY
          grep '^Summary:' kubeconform_output.txt >> $GITHUB_STEP_SUMMARY
