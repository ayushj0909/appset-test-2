name: Validate Helm Charts

on:
  pull_request:
    paths:
      - 'charts/**'
  workflow_dispatch:


jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.1

      - name: Render Helm Chart
        run: helm template workload ./chart/workload --skip-schema-validation > rendered.yaml

      - name: Validate rendered manifests with kubeconform
        id: validate
        run: |
          output=$(docker run --rm -v "${{ github.workspace }}:/workspace" ghcr.io/yannh/kubeconform:latest -summary -output text /workspace/rendered.yaml)
          echo "$output"
          echo "$output" >> $GITHUB_STEP_SUMMARY
          # Set the step output so it can be used in later steps
          echo "output<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Process and generate summary
        run: |
          # Get the output from the previous step
          output="${{ steps.validate.outputs.output }}"
          
          # Process resource lines:
          # - Select lines starting with '/workspace/rendered.yaml'
          # - Remove the file prefix and color the resource name (the second word) in green.
          processed_resources=$(echo "$output" | \
            grep '^/workspace/rendered.yaml' | \
            sed -E 's|/workspace/rendered.yaml - ([^[:space:]]+)[[:space:]]+([^[:space:]]+)(.*)|\1 <span style="color:green;">\2</span>\3|')
          
          # Add emoji: green check (✅) for lines with "is valid" and red cross (❌) for lines with "failed validation"
          processed_resources=$(echo "$processed_resources" | \
            sed -E '/is valid/ s|^|✅ |; /failed validation/ s|^|❌ |')
          
          # Process the final summary line:
          # - Color "Valid" in green, "Invalid" and "Errors" in red, and "Skipped" in white.
          processed_summary=$(echo "$output" | \
            grep '^Summary:' | \
            sed -E \
            -e 's/(Valid: )([0-9]+)/\1<span style="color:green;">\2<\/span>/' \
            -e 's/(Invalid: )([0-9]+)/\1<span style="color:red;">\2<\/span>/' \
            -e 's/(Errors: )([0-9]+)/\1<span style="color:red;">\2<\/span>/' \
            -e 's/(Skipped: )([0-9]+)/\1<span style="color:white;">\2<\/span>/')
          
          # Append the processed resource lines and the summary line to the GitHub step summary file.
          {
            echo "$processed_resources"
            echo "$processed_summary"
          } >> $GITHUB_STEP_SUMMARY
